问题一:不同模板的Excel如何存入数据库
   分析:
    变化的地方:Excel模板
    不变的地方:数据库每个表的结构

    思路:通过一个"中介",负责找到 => 每个Excel模板和数据库表的对应关系

    其关键在于如何处理好上述的映射关系

步骤:
    1.建立一个路由表,其字段:
      PROJECT_BENEFICIARY_MAP:  ID(主键), PROJECT_TYPE(项目类型(字符或字典对应值)), PROJECT_BENEFICIARY_CLASS(对应收益人全类名)
    2.创建各种项目类型对应的表,其字段:
      PROJECT_BENEFICIARY_HELP:     ID(主键), PROJECT_ID(对应项目ID),...(Excel特定列)
      PROJECT_BENEFICIARY_SCHOLAR:  ID(主键), PROJECT_ID(对应项目ID),...(Excel特定列)
      ...
      
    3.创建一个抽象类Beneficiary,其属性为各种项目类型中都有的相同字段,和一个抽象方法getMapper();
    4.创建一个接口BeneficiaryMapper,其中含有公有的查询方法(如插入,查询等)
    5.创建各种项目类型对应的Model并继承Beneficiary抽象类,写出该项目类型对应的特定属性 + 重写无参构造方法
      以创建对应的mapper全类名,此类型对应的Mapper并getMapper()方法,该方法返回对应该项目类型的Mapper全类名
    6.创建各种项目类型对应的Mapper接口并继承Beneficiary接口(继承的目的是通过父类接口不比再写公共方法的声明),并写出针对该项目类型特有的方法
    7.创建各种项目类型对应的MapperXML文件,并给出SQL
    9.创建工具类SpecificBeneficiaryUtil类,该类含有可以通过全类名来获得对应Model的方法和特定的get方法
    10.创建公共的BeneficiaryService接口及其实现类

流程:
    1.上传受益人时,将文件和该项目对应的项目类型传给(或查出)Controller,
    2.项目类型传给Service的distinguishBeneficiary方法,该方法从PROJECT_BENEFICIARY_MAP表中查询出对应的PROJECT_BENEFICIARY_CLASS全类名
    3.将全类名和文件作为实参传给BeneficiaryService的upload方法,该方法用SpecificBeneficiaryUtil类的getAll(String fullClassName)方法,返回一个
      Map<String,Object>,map中将包含该特定Beneficiary子类的引用,和其对应的Mapper接口
    4.从3中获得Map(起名为specificBeneficiaryMap),
        a.通过
            Beneficiary bene = (全类名)specificBeneficiaryMap.get("model");获取对应的模型类 (也可以通过getModel,getMapper等方法直接获得对应的实例)
        b.通过
            BeneficiaryMapper mapper = bene.getMapper();获得对应的mapper接口全类名
        c.根据模型类开始解析Excel获得数据
        d.存入数据库
